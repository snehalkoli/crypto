{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// export default function SortTable() {\n//     const [coins, setCoins] = useState([]);\n//     const [sortedOrder, setSortedOrder] = useState('dsc');\n//     const [favouriteCoins, setFavouriteCoins] = useState([]);\n//     // Check for duplicate coins in favourite list\n//     const hasCoin = (id) => {\n//         for (let index = 0; index < favouriteCoins.length; index++) {\n//             if (favouriteCoins[index].id === id) return true;\n//         }\n//         return false;\n//     }\n//     // Remove favourite\n//     const removeFavourite = (id) => {\n//         const newFavouriteCoins = [...favouriteCoins].filter((coin) => coin.id !== id);\n//         setFavouriteCoins([...newFavouriteCoins]);\n//         localStorage.setItem('favourite-coins', JSON.stringify([...newFavouriteCoins]));\n//     }\n//     // Add to favourite \n//     const addToFavourite = (id) => {\n//         if (favouriteCoins.length < 3 && !hasCoin(id)) {\n//             const selectedCoin = coins.filter((coin) => id === coin.id);\n//             const allSelectedCoins = [...favouriteCoins, ...selectedCoin];\n//             setFavouriteCoins([...allSelectedCoins]);\n//             localStorage.setItem('favourite-coins', JSON.stringify([...allSelectedCoins]));\n//         }\n//     }\n//     // Sort coins\n//     const sortCoins = (column) => {\n//         if (sortedOrder === 'asc') {\n//             const sortedCoins = [...coins].sort((coin_x, coin_y) => coin_x[column] > coin_y[column] ? 1 : -1);\n//             setCoins([...sortedCoins]);\n//             setSortedOrder('dsc');\n//         } else if (sortedOrder === 'dsc') {\n//             const sortedCoins = [...coins].sort((coin_x, coin_y) => coin_x[column] < coin_y[column] ? 1 : -1);\n//             setCoins([...sortedCoins]);\n//             setSortedOrder('asc');\n//         }\n//     }\n//     // Fetch API\n//     const fetchData = async () => {\n//         const response = await fetch('https://api.coinstats.app/public/v1/coins?skip=0&limit=30');\n//         const data = await response.json();\n//         setCoins([...data.coins]);\n//     }\n//     useEffect(() => {\n//         fetchData();\n//         const storedCoins = JSON.parse(localStorage.getItem('favourite-coins'));\n//         if (storedCoins) setFavouriteCoins([...storedCoins]);\n//     }, []);\n//     return (\n//         <div className='containerr'>\n//             <div className='innerWrapper'>\n//             </div>\n//             <div className='contentWrapper'>\n//                 <div className='parentfavWrapper'>\n//                     <p className='heading'>Click on currency name to add to Favourite</p>\n//                     <div className='favouriteWrapper'>\n//                         {\n//                             favouriteCoins && favouriteCoins.map((coin) => {\n//                                 const { id, icon, name, symbol, price, priceChange1h } = coin;\n//                                 return (\n//                                     <div key={id} className='favCrypto'>\n//                                         <div className='wrapper favWrapper'>\n//                                             <div className='nameImgContainer'>\n//                                                 <img src={icon}></img>\n//                                                 <div className='nameContainer'>\n//                                                     <p className='name'>{name}</p>\n//                                                     <p className='symbol'>{symbol}</p>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                         <div className='priceChangeWrapper'>\n//                                             <div className='price'>\n//                                                 <p className='label'>Price</p>\n//                                                 <p className='text'>${price.toFixed(2)}</p>\n//                                             </div>\n//                                             <div className='change'>\n//                                                 <p className='label'>Change(1Hr)</p>\n//                                                 {\n//                                                     priceChange1h < 0 ?\n//                                                         (<p className='text red'>{priceChange1h}</p>) :\n//                                                         (<p className='text green'>{priceChange1h}</p>)\n//                                                 }\n//                                             </div>\n//                                         </div>\n//                                         <div className='removeFavourite' onClick={() => removeFavourite(id)}>\n//                                             <p>Remove</p>\n//                                         </div>\n//                                     </div>\n//                                 )\n//                             })\n//                         }\n//                     </div>\n//                 </div>\n//                 <table className='table border custom-table-width'>\n//                     <thead>\n//                         <tr className='header'>\n//                             <th className='left custom-hide' onClick={() => sortCoins(\"rank\")}>Rank</th>\n//                             <th className='left' onClick={() => sortCoins(\"name\")}>Name</th>\n//                             <th className='right' onClick={() => sortCoins(\"price\")}>Price</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"marketCap\")}>Market Cap</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"volume\")}>Volume</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"totalSupply\")}>Supply</th>\n//                             <th className='right' onClick={() => sortCoins(\"priceChange1h\")}>Change(1Hr)</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {\n//                             coins.map((coin) => {\n//                                 const { id, rank, icon, name, symbol, price, priceChange1h, marketCap, volume, totalSupply, } = coin;\n//                                 return (\n//                                     <tr className='brow' key={id}>\n//                                         <td className='center custom-hide'>{rank}</td>\n//                                         <td>\n//                                             <div className='wrapper'>\n//                                                 <div className='nameImgContainer'>\n//                                                     <img src={icon}></img>\n//                                                     <div className='nameContainer'>\n//                                                         <p title='Add to favourite' onClick={() => addToFavourite(id)} className='name'>{name}</p>\n//                                                         <p className='symbol'>{symbol}</p>\n//                                                     </div>\n//                                                 </div>\n//                                             </div>\n//                                         </td>\n//                                         <td className='right'>${price.toFixed(2)}</td>\n//                                         <td className='right custom-hide'>\n//                                             ${Number(marketCap) >= 1.0e9 ? (Number(marketCap) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(marketCap) >= 1.0e6 ? (Number(marketCap) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(marketCap) >= 1.0e3 ? (Number(marketCap) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(marketCap).toFixed(2)}</td>\n//                                         <td className='right custom-hide'>\n//                                             ${Number(volume) >= 1.0e9 ? (Number(volume) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(volume) >= 1.0e6 ? (Number(volume) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(volume) >= 1.0e3 ? (Number(volume) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(volume).toFixed(2)}\n//                                         </td>\n//                                         <td className='right custom-hide'>\n//                                             ${Number(totalSupply) >= 1.0e9 ? (Number(totalSupply) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(coin.totalSupply) >= 1.0e6 ? (Number(totalSupply) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(totalSupply) >= 1.0e3 ? (Number(totalSupply) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(totalSupply).toFixed(2)}\n//                                         </td>\n//                                         {\n//                                             priceChange1h < 0 ?\n//                                                 (<td className='right red'>{priceChange1h}</td>) :\n//                                                 (<td className='right green'>{priceChange1h}</td>)\n//                                         }\n//                                     </tr>\n//                                 )\n//                             })}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Admin/Downloads/crizzbuzz-assignment-main/crizzbuzz-assignment-main/src/components/CryptoTable.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n\n// export default function SortTable() {\n//     const [coins, setCoins] = useState([]);\n//     const [sortedOrder, setSortedOrder] = useState('dsc');\n//     const [favouriteCoins, setFavouriteCoins] = useState([]);\n\n//     // Check for duplicate coins in favourite list\n//     const hasCoin = (id) => {\n//         for (let index = 0; index < favouriteCoins.length; index++) {\n//             if (favouriteCoins[index].id === id) return true;\n//         }\n//         return false;\n//     }\n\n//     // Remove favourite\n//     const removeFavourite = (id) => {\n//         const newFavouriteCoins = [...favouriteCoins].filter((coin) => coin.id !== id);\n//         setFavouriteCoins([...newFavouriteCoins]);\n//         localStorage.setItem('favourite-coins', JSON.stringify([...newFavouriteCoins]));\n//     }\n\n//     // Add to favourite \n//     const addToFavourite = (id) => {\n//         if (favouriteCoins.length < 3 && !hasCoin(id)) {\n//             const selectedCoin = coins.filter((coin) => id === coin.id);\n//             const allSelectedCoins = [...favouriteCoins, ...selectedCoin];\n//             setFavouriteCoins([...allSelectedCoins]);\n//             localStorage.setItem('favourite-coins', JSON.stringify([...allSelectedCoins]));\n//         }\n//     }\n\n//     // Sort coins\n//     const sortCoins = (column) => {\n//         if (sortedOrder === 'asc') {\n//             const sortedCoins = [...coins].sort((coin_x, coin_y) => coin_x[column] > coin_y[column] ? 1 : -1);\n//             setCoins([...sortedCoins]);\n//             setSortedOrder('dsc');\n//         } else if (sortedOrder === 'dsc') {\n//             const sortedCoins = [...coins].sort((coin_x, coin_y) => coin_x[column] < coin_y[column] ? 1 : -1);\n//             setCoins([...sortedCoins]);\n//             setSortedOrder('asc');\n//         }\n//     }\n\n//     // Fetch API\n//     const fetchData = async () => {\n//         const response = await fetch('https://api.coinstats.app/public/v1/coins?skip=0&limit=30');\n//         const data = await response.json();\n//         setCoins([...data.coins]);\n//     }\n\n//     useEffect(() => {\n//         fetchData();\n//         const storedCoins = JSON.parse(localStorage.getItem('favourite-coins'));\n//         if (storedCoins) setFavouriteCoins([...storedCoins]);\n//     }, []);\n//     return (\n//         <div className='containerr'>\n//             <div className='innerWrapper'>\n\n//             </div>\n//             <div className='contentWrapper'>\n//                 <div className='parentfavWrapper'>\n\n//                     <p className='heading'>Click on currency name to add to Favourite</p>\n//                     <div className='favouriteWrapper'>\n//                         {\n//                             favouriteCoins && favouriteCoins.map((coin) => {\n//                                 const { id, icon, name, symbol, price, priceChange1h } = coin;\n//                                 return (\n//                                     <div key={id} className='favCrypto'>\n//                                         <div className='wrapper favWrapper'>\n//                                             <div className='nameImgContainer'>\n//                                                 <img src={icon}></img>\n//                                                 <div className='nameContainer'>\n//                                                     <p className='name'>{name}</p>\n//                                                     <p className='symbol'>{symbol}</p>\n//                                                 </div>\n//                                             </div>\n//                                         </div>\n//                                         <div className='priceChangeWrapper'>\n//                                             <div className='price'>\n//                                                 <p className='label'>Price</p>\n//                                                 <p className='text'>${price.toFixed(2)}</p>\n//                                             </div>\n//                                             <div className='change'>\n//                                                 <p className='label'>Change(1Hr)</p>\n//                                                 {\n//                                                     priceChange1h < 0 ?\n//                                                         (<p className='text red'>{priceChange1h}</p>) :\n//                                                         (<p className='text green'>{priceChange1h}</p>)\n//                                                 }\n//                                             </div>\n//                                         </div>\n//                                         <div className='removeFavourite' onClick={() => removeFavourite(id)}>\n//                                             <p>Remove</p>\n//                                         </div>\n//                                     </div>\n//                                 )\n//                             })\n//                         }\n//                     </div>\n//                 </div>\n//                 <table className='table border custom-table-width'>\n//                     <thead>\n//                         <tr className='header'>\n//                             <th className='left custom-hide' onClick={() => sortCoins(\"rank\")}>Rank</th>\n//                             <th className='left' onClick={() => sortCoins(\"name\")}>Name</th>\n//                             <th className='right' onClick={() => sortCoins(\"price\")}>Price</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"marketCap\")}>Market Cap</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"volume\")}>Volume</th>\n//                             <th className='right custom-hide' onClick={() => sortCoins(\"totalSupply\")}>Supply</th>\n//                             <th className='right' onClick={() => sortCoins(\"priceChange1h\")}>Change(1Hr)</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {\n//                             coins.map((coin) => {\n//                                 const { id, rank, icon, name, symbol, price, priceChange1h, marketCap, volume, totalSupply, } = coin;\n//                                 return (\n//                                     <tr className='brow' key={id}>\n//                                         <td className='center custom-hide'>{rank}</td>\n//                                         <td>\n//                                             <div className='wrapper'>\n//                                                 <div className='nameImgContainer'>\n//                                                     <img src={icon}></img>\n//                                                     <div className='nameContainer'>\n//                                                         <p title='Add to favourite' onClick={() => addToFavourite(id)} className='name'>{name}</p>\n//                                                         <p className='symbol'>{symbol}</p>\n//                                                     </div>\n//                                                 </div>\n//                                             </div>\n//                                         </td>\n//                                         <td className='right'>${price.toFixed(2)}</td>\n\n//                                         <td className='right custom-hide'>\n//                                             ${Number(marketCap) >= 1.0e9 ? (Number(marketCap) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(marketCap) >= 1.0e6 ? (Number(marketCap) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(marketCap) >= 1.0e3 ? (Number(marketCap) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(marketCap).toFixed(2)}</td>\n\n//                                         <td className='right custom-hide'>\n//                                             ${Number(volume) >= 1.0e9 ? (Number(volume) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(volume) >= 1.0e6 ? (Number(volume) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(volume) >= 1.0e3 ? (Number(volume) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(volume).toFixed(2)}\n//                                         </td>\n\n//                                         <td className='right custom-hide'>\n//                                             ${Number(totalSupply) >= 1.0e9 ? (Number(totalSupply) / 1.0e9).toFixed(2) + \"b\" :\n//                                                 Number(coin.totalSupply) >= 1.0e6 ? (Number(totalSupply) / 1.0e6).toFixed(2) + \"m\" :\n//                                                     Number(totalSupply) >= 1.0e3 ? (Number(totalSupply) / 1.0e3).toFixed(2) + \"k\" :\n//                                                         Number(totalSupply).toFixed(2)}\n//                                         </td>\n//                                         {\n//                                             priceChange1h < 0 ?\n//                                                 (<td className='right red'>{priceChange1h}</td>) :\n//                                                 (<td className='right green'>{priceChange1h}</td>)\n//                                         }\n//                                     </tr>\n//                                 )\n//                             })}\n//                     </tbody>\n//                 </table>\n//             </div>\n//         </div>\n//     )\n// }\n"],"mappings},"metadata":{},"sourceType":"module"}